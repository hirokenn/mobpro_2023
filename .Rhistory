sum(is.na(df_cleaned$percentile))
View(df_short_clean)
source("~/中室研/2023秋/課題/mobpro_2023/make_messy_data.R", echo=TRUE)
library(pacman)
p_load(tidyverse)
dir_distributed_data <- "./data/distributed"
dir_cleaned_data <- "./data/tmp"
# read distributed data---------------------------------------------------------
# student characteristics
df_student_characteristics <- read_csv(file = paste0(dir_distributed_data, "/student_characteristics.csv"),
skip = 0,
locale = locale(encoding = "shift-jis")) %>%
rename(stu_id = 生徒ID,
sch_id = 小学校NUMBER,
etpteacher = 非常勤講師,
age = 年齢,
gender = 性別)
# treatment status
df_treatment_status <- read_csv(file = paste0(dir_distributed_data, "/treatment_status.csv"),
skip = 0,
locale = locale(encoding = "UTF-8")) %>%
rename(sch_id = 小学校NUMBER,
tracking = 能力別学級,
district = 立地)
# outcomes
df_outcomes <- read_csv(file = paste0(dir_distributed_data, "/outcomes.csv"),
skip = 0,
locale = locale(encoding = "shift-jis")) %>%
rename(stu_id = 生徒ID,
quartile = 四分位,
percentile = パーセンタイル,
totalscore = 学力スコア)
# concatenate all data----------------------------------------------------------
df_student_characteristics <- df_student_characteristics %>%
mutate(stu_id = str_remove(stu_id, "番"),
stu_id = as.numeric(stu_id))
df_concatenated <- df_student_characteristics %>%
left_join(df_treatment_status, by = "sch_id") %>%
left_join(df_outcomes, by = "stu_id")
# clean data--------------------------------------------------------------------
# deficiency handling
deficiency_pattern <- c("unknown", NA, NaN, Inf, -Inf, "999", "*")
df_cleaned <- df_concatenated %>%
mutate(across(c(gender, percentile, quartile), ~if_else(. %in% deficiency_pattern, NA, .)))
sum(is.na(df_cleaned$percentile))
sum(is.na(df_cleaned$quartile))
source("~/中室研/2023秋/課題/mobpro_2023/make_messy_data.R", echo=TRUE)
library(pacman)
p_load(tidyverse)
dir_distributed_data <- "./data/distributed"
dir_cleaned_data <- "./data/tmp"
# read distributed data---------------------------------------------------------
# student characteristics
df_student_characteristics <- read_csv(file = paste0(dir_distributed_data, "/student_characteristics.csv"),
skip = 0,
locale = locale(encoding = "shift-jis")) %>%
rename(stu_id = 生徒ID,
sch_id = 小学校NUMBER,
etpteacher = 非常勤講師,
age = 年齢,
gender = 性別)
# treatment status
df_treatment_status <- read_csv(file = paste0(dir_distributed_data, "/treatment_status.csv"),
skip = 0,
locale = locale(encoding = "UTF-8")) %>%
rename(sch_id = 小学校NUMBER,
tracking = 能力別学級,
district = 立地)
# outcomes
df_outcomes <- read_csv(file = paste0(dir_distributed_data, "/outcomes.csv"),
skip = 0,
locale = locale(encoding = "shift-jis")) %>%
rename(stu_id = 生徒ID,
quartile = 四分位,
percentile = パーセンタイル,
totalscore = 学力スコア)
# concatenate all data----------------------------------------------------------
df_student_characteristics <- df_student_characteristics %>%
mutate(stu_id = str_remove(stu_id, "番"),
stu_id = as.numeric(stu_id))
df_concatenated <- df_student_characteristics %>%
left_join(df_treatment_status, by = "sch_id") %>%
left_join(df_outcomes, by = "stu_id")
# clean data--------------------------------------------------------------------
# deficiency handling
deficiency_pattern <- c("unknown", NA, NaN, Inf, -Inf, "999", "*", "###")
df_cleaned <- df_concatenated %>%
mutate(across(c(gender, percentile, quartile), ~if_else(. %in% deficiency_pattern, NA, .)))
# make dummy variables
df_numeric <- df_cleaned %>%
mutate(girl = if_else(gender == "女子", 1, 0),
in_bungoma = if_else(district == "BUNGOMA", 1, 0),
bottomhalf = if_else(quartile %in% c(0,1), 1, 0),
bottomquarter = if_else(quartile == 0, 1, 0),
secondquarter = if_else(quartile == 1, 1,0),
thirdquarter = if_else(quartile == 2, 1, 0)) %>%
select(-gender, -district, -quartile)
View(df_concatenated)
View(df_numeric)
# make dummy variables
df_numeric <- df_cleaned %>%
mutate(girl = if_else(gender == "女子", 1, 0),
in_bungoma = if_else(district == "BUNGOMA", 1, 0),
bottomhalf = if_else(quartile <= 1, 1, 0),
bottomquarter = if_else(quartile == 0, 1, 0),
secondquarter = if_else(quartile == 1, 1,0),
thirdquarter = if_else(quartile == 2, 1, 0)) %>%
select(-gender, -district, -quartile)
df <- df_numeric %>%
mutate(std_score = scale(score, na.rm = TRUE))
help("scale")
df <- df_numeric %>%
mutate(std_score = scale(score))
library(pacman)
p_load(tidyverse)
dir_distributed_data <- "./data/distributed"
dir_cleaned_data <- "./data/tmp"
# read distributed data---------------------------------------------------------
# student characteristics
df_student_characteristics <- read_csv(file = paste0(dir_distributed_data, "/student_characteristics.csv"),
skip = 0,
locale = locale(encoding = "shift-jis")) %>%
rename(stu_id = 生徒ID,
sch_id = 小学校NUMBER,
etpteacher = 非常勤講師,
age = 年齢,
gender = 性別)
# treatment status
df_treatment_status <- read_csv(file = paste0(dir_distributed_data, "/treatment_status.csv"),
skip = 0,
locale = locale(encoding = "UTF-8")) %>%
rename(sch_id = 小学校NUMBER,
tracking = 能力別学級,
district = 立地)
# outcomes
df_outcomes <- read_csv(file = paste0(dir_distributed_data, "/outcomes.csv"),
skip = 0,
locale = locale(encoding = "shift-jis")) %>%
rename(stu_id = 生徒ID,
quartile = 四分位,
percentile = パーセンタイル,
score = 学力スコア)
# concatenate all data----------------------------------------------------------
df_student_characteristics <- df_student_characteristics %>%
mutate(stu_id = str_remove(stu_id, "番"),
stu_id = as.numeric(stu_id))
df_concatenated <- df_student_characteristics %>%
left_join(df_treatment_status, by = "sch_id") %>%
left_join(df_outcomes, by = "stu_id")
# clean data--------------------------------------------------------------------
# deficiency handling
deficiency_pattern <- c("unknown", NA, Inf, "999", "*", "###")
df_cleaned <- df_concatenated %>%
mutate(across(c(gender, percentile, quartile), ~if_else(. %in% deficiency_pattern, NA, .)))
# make dummy variables
df_numeric <- df_cleaned %>%
mutate(girl = if_else(gender == "女子", 1, 0),
in_bungoma = if_else(district == "BUNGOMA", 1, 0),
bottomhalf = if_else(quartile <= 1, 1, 0),
bottomquarter = if_else(quartile == 0, 1, 0),
secondquarter = if_else(quartile == 1, 1,0),
thirdquarter = if_else(quartile == 2, 1, 0)) %>%
select(-gender, -district, -quartile)
# scale score
df <- df_numeric %>%
mutate(std_score = scale(score))
library(pacman)
p_load(tidyverse)
dir_distributed_data <- "./data/distributed"
dir_cleaned_data <- "./data/tmp"
# read distributed data---------------------------------------------------------
# student characteristics
df_student_characteristics <- read_csv(file = paste0(dir_distributed_data, "/student_characteristics.csv"),
skip = 0,
locale = locale(encoding = "shift-jis")) %>%
rename(stu_id = 生徒ID,
sch_id = 小学校NUMBER,
etpteacher = 非常勤講師,
age = 年齢,
gender = 性別)
# treatment status
df_treatment_status <- read_csv(file = paste0(dir_distributed_data, "/treatment_status.csv"),
skip = 0,
locale = locale(encoding = "UTF-8")) %>%
rename(sch_id = 小学校NUMBER,
tracking = 能力別学級,
district = 立地)
# outcomes
df_outcomes <- read_csv(file = paste0(dir_distributed_data, "/outcomes.csv"),
skip = 0,
locale = locale(encoding = "shift-jis")) %>%
rename(stu_id = 生徒ID,
quartile = 四分位,
percentile = パーセンタイル,
score = 学力スコア)
# concatenate all data----------------------------------------------------------
df_student_characteristics <- df_student_characteristics %>%
mutate(stu_id = str_remove(stu_id, "番"),
stu_id = as.numeric(stu_id))
df_concatenated <- df_student_characteristics %>%
left_join(df_treatment_status, by = "sch_id") %>%
left_join(df_outcomes, by = "stu_id")
# clean data--------------------------------------------------------------------
# deficiency handling
deficiency_pattern <- c("unknown", NA, Inf, "999", "*", "###")
df_cleaned <- df_concatenated %>%
mutate(across(c(gender, percentile, quartile), ~if_else(. %in% deficiency_pattern, NA, .)))
# make dummy variables
df_numeric <- df_cleaned %>%
mutate(girl = if_else(gender == "女子", 1, 0),
in_bungoma = if_else(district == "BUNGOMA", 1, 0),
bottomhalf = if_else(quartile <= 1, 1, 0),
bottomquarter = if_else(quartile == 0, 1, 0),
secondquarter = if_else(quartile == 1, 1,0),
thirdquarter = if_else(quartile == 2, 1, 0)) %>%
select(-gender, -district, -quartile)
# scale score
df <- df_numeric %>%
mutate(std_score = scale(score))
# output cleaned data-----------------------------------------------------------
saveRDS(df, paste0(dir_cleaned_data, "/df.rds"))
df <- readRDS("~/中室研/2023秋/課題/mobpro_2023/data/tmp/df.rds")
df <- readRDS(paste0(dir_cleand_data, "/df.rds")) %>%
mutate(tracking = if_else(tracking == 1, "treatment", "control"))
library(pacman)
p_load(gt, modelsummary)
dir_cleand_data <- "./tmp"
df <- readRDS(paste0(dir_cleand_data, "/df.rds")) %>%
mutate(tracking = if_else(tracking == 1, "treatment", "control"))
library(pacman)
p_load(gt, modelsummary)
dir_cleand_data <- "./data/tmp"
df <- readRDS(paste0(dir_cleand_data, "/df.rds")) %>%
mutate(tracking = if_else(tracking == 1, "treatment", "control"))
View(df)
df_summary <- readRDS(paste0(dir_cleand_data, "/df.rds")) %>%
mutate(tracking = if_else(tracking == 1, "treatment", "control"))
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/cleaning.R", echo=TRUE)
df_summary <- readRDS(paste0(dir_cleand_data, "/df.rds")) %>%
mutate(tracking = if_else(tracking == 1, "treatment", "control"))
summary <- datasummary(std_score + etpteacher + age + gender + percentile + bottomhalf ~ as.factor(tracking) * (Mean + SD),
data = df, na.rm = TRUE) %>%
tab_spanner(label = "能力別", columns = "o")
summary <- datasummary(std_score + etpteacher + age + girl + percentile + bottomhalf ~ as.factor(tracking) * (Mean + SD),
data = df, na.rm = TRUE) %>%
tab_spanner(label = "能力別", columns = "o")
summary <- datasummary(std_score + etpteacher + age + girl + percentile + bottomhalf ~ as.factor(tracking) * (Mean + SD),
data = df_summary, na.rm = TRUE)
View(df_short_messy)
View(df_summary)
library(pacman)
p_load(tidyverse)
dir_distributed_data <- "./data/distributed"
dir_cleaned_data <- "./data/tmp"
# read distributed data---------------------------------------------------------
# student characteristics
df_student_characteristics <- read_csv(file = paste0(dir_distributed_data, "/student_characteristics.csv"),
skip = 0,
locale = locale(encoding = "shift-jis")) %>%
rename(stu_id = 生徒ID,
sch_id = 小学校NUMBER,
etpteacher = 非常勤講師,
age = 年齢,
gender = 性別)
# treatment status
df_treatment_status <- read_csv(file = paste0(dir_distributed_data, "/treatment_status.csv"),
skip = 0,
locale = locale(encoding = "UTF-8")) %>%
rename(sch_id = 小学校NUMBER,
tracking = 能力別学級,
district = 立地)
# outcomes
df_outcomes <- read_csv(file = paste0(dir_distributed_data, "/outcomes.csv"),
skip = 0,
locale = locale(encoding = "shift-jis")) %>%
rename(stu_id = 生徒ID,
quartile = 四分位,
percentile = パーセンタイル,
score = 学力スコア)
# concatenate all data----------------------------------------------------------
df_student_characteristics <- df_student_characteristics %>%
mutate(stu_id = str_remove(stu_id, "番"),
stu_id = as.numeric(stu_id))
df_concatenated <- df_student_characteristics %>%
left_join(df_treatment_status, by = "sch_id") %>%
left_join(df_outcomes, by = "stu_id")
# clean data--------------------------------------------------------------------
# deficiency handling
deficiency_pattern <- c("unknown", NA, Inf, "999", "*", "###")
df_cleaned <- df_concatenated %>%
mutate(across(c(gender, percentile, quartile), ~if_else(. %in% deficiency_pattern, NA, .)))
# make dummy variables
df_numeric <- df_cleaned %>%
mutate(girl = if_else(gender == "女子", 1, 0),
in_bungoma = if_else(district == "BUNGOMA", 1, 0),
bottomhalf = if_else(quartile <= 1, 1, 0),
bottomquarter = if_else(quartile == 0, 1, 0),
secondquarter = if_else(quartile == 1, 1,0),
thirdquarter = if_else(quartile == 2, 1, 0)) %>%
select(-gender, -district, -quartile)
# scale score
df <- df_numeric %>%
mutate(std_score = scale(score))
# output cleaned data-----------------------------------------------------------
saveRDS(df, paste0(dir_cleaned_data, "/df.rds"))
View(df)
View(df)
library(pacman)
p_load(tidyverse)
dir_distributed_data <- "./data/distributed"
dir_cleaned_data <- "./data/tmp"
# read distributed data---------------------------------------------------------
# student characteristics
df_student_characteristics <- read_csv(file = paste0(dir_distributed_data, "/student_characteristics.csv"),
skip = 0,
locale = locale(encoding = "shift-jis")) %>%
rename(stu_id = 生徒ID,
sch_id = 小学校NUMBER,
etpteacher = 非常勤講師,
age = 年齢,
gender = 性別)
# treatment status
df_treatment_status <- read_csv(file = paste0(dir_distributed_data, "/treatment_status.csv"),
skip = 0,
locale = locale(encoding = "UTF-8")) %>%
rename(sch_id = 小学校NUMBER,
tracking = 能力別学級,
district = 立地)
# outcomes
df_outcomes <- read_csv(file = paste0(dir_distributed_data, "/outcomes.csv"),
skip = 0,
locale = locale(encoding = "shift-jis")) %>%
rename(stu_id = 生徒ID,
quartile = 四分位,
percentile = パーセンタイル,
score = 学力スコア)
# concatenate all data----------------------------------------------------------
df_student_characteristics <- df_student_characteristics %>%
mutate(stu_id = str_remove(stu_id, "番"),
stu_id = as.numeric(stu_id))
df_concatenated <- df_student_characteristics %>%
left_join(df_treatment_status, by = "sch_id") %>%
left_join(df_outcomes, by = "stu_id")
# clean data--------------------------------------------------------------------
# deficiency handling
deficiency_pattern <- c("unknown", NA, Inf, "999", "*", "###")
df_cleaned <- df_concatenated %>%
mutate(across(c(gender, percentile, quartile), ~if_else(. %in% deficiency_pattern, NA, .)))
# make dummy variables
df_numeric <- df_cleaned %>%
mutate(girl = if_else(gender == "女子", 1, 0),
in_bungoma = if_else(district == "BUNGOMA", 1, 0),
bottomhalf = if_else(quartile <= 1, 1, 0),
bottomquarter = if_else(quartile == 0, 1, 0),
secondquarter = if_else(quartile == 1, 1,0),
thirdquarter = if_else(quartile == 2, 1, 0)) %>%
select(-gender, -district, -quartile)
# scale score
df <- df_numeric %>%
mutate(std_score = scale(score))
View(df)
library(pacman)
p_load(tidyverse)
dir_distributed_data <- "./data/distributed"
dir_cleaned_data <- "./data/tmp"
# read distributed data---------------------------------------------------------
# student characteristics
df_student_characteristics <- read_csv(file = paste0(dir_distributed_data, "/student_characteristics.csv"),
skip = 0,
locale = locale(encoding = "shift-jis")) %>%
rename(stu_id = 生徒ID,
sch_id = 小学校NUMBER,
etpteacher = 非常勤講師,
age = 年齢,
gender = 性別)
# treatment status
df_treatment_status <- read_csv(file = paste0(dir_distributed_data, "/treatment_status.csv"),
skip = 0,
locale = locale(encoding = "UTF-8")) %>%
rename(sch_id = 小学校NUMBER,
tracking = 能力別学級,
district = 立地)
# outcomes
df_outcomes <- read_csv(file = paste0(dir_distributed_data, "/outcomes.csv"),
skip = 0,
locale = locale(encoding = "shift-jis")) %>%
rename(stu_id = 生徒ID,
quartile = 四分位,
percentile = パーセンタイル,
score = 学力スコア)
# concatenate all data----------------------------------------------------------
df_student_characteristics <- df_student_characteristics %>%
mutate(stu_id = str_remove(stu_id, "番"),
stu_id = as.numeric(stu_id))
df_concatenated <- df_student_characteristics %>%
left_join(df_treatment_status, by = "sch_id") %>%
left_join(df_outcomes, by = "stu_id")
# clean data--------------------------------------------------------------------
# deficiency handling
deficiency_pattern <- c("unknown", NA, Inf, "999", "*", "###")
df_cleaned <- df_concatenated %>%
mutate(across(c(gender, percentile, quartile), ~if_else(. %in% deficiency_pattern, NA, .)))
# make dummy variables
df_numeric <- df_cleaned %>%
mutate(girl = if_else(gender == "女子", 1, 0),
in_bungoma = if_else(district == "BUNGOMA", 1, 0),
bottomhalf = if_else(quartile <= 1, 1, 0),
bottomquarter = if_else(quartile == 0, 1, 0),
secondquarter = if_else(quartile == 1, 1,0),
thirdquarter = if_else(quartile == 2, 1, 0)) %>%
select(-gender, -district, -quartile)
# scale score
df <- df_numeric %>%
mutate(score = scale(score))
View(df)
# scale score
df <- df_numeric %>%
mutate(std_score = score)
# scale score
df <- df_numeric %>%
mutate(std_score = scale(score))
scale(df_numeric$score)
help("scale")
# scale score
df <- df_numeric %>%
mutate(std_score = scale(score)[1])
# scale score
df <- df_numeric %>%
mutate(std_score = scale(score)[0])
# scale score
df <- df_numeric %>%
mutate(std_score = scale(score)[2])
# scale score
df <- df_numeric %>%
mutate(std_score = scale(score))
test<-scale(df_numeric$score)
View(test)
# scale score
df <- df_numeric %>%
mutate(std_score = scale(score)[:,1])
# scale score
df <- df_numeric %>%
mutate(std_score = scale(score)[:,1])
# scale score
df <- df_numeric %>%
mutate(std_score = scale(score)[,1])
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/cleaning.R", echo=TRUE)
library(pacman)
p_load(gt, modelsummary)
dir_cleand_data <- "./data/tmp"
p_load(tidyverse, modelsummary)
dir_cleand_data <- "./data/tmp"
df_summary <- readRDS(paste0(dir_cleand_data, "/df.rds")) %>%
mutate(tracking = if_else(tracking == 1, "treatment", "control"))
summary <- datasummary(std_score + etpteacher + age + girl + percentile + bottomhalf ~ as.factor(tracking) * (Mean + SD),
data = df_summary, na.rm = TRUE)
View(df)
summary <- datasummary(std_score + etpteacher + age + girl + percentile + bottomhalf ~ tracking * (Mean + SD),
data = df_summary, na.rm = TRUE)
summary <- datasummary(std_score + etpteacher + age + girl + percentile + bottomhalf ~ (Mean + SD),
data = df_summary, na.rm = TRUE)
summary <- datasummary(std_score~ tracking * (Mean + SD),
data = df_summary, na.rm = TRUE)
summary
summary <- datasummary(std_score + etpteacher + age + girl + bottomhalf ~ tracking * (Mean + SD),
data = df_summary, na.rm = TRUE)
summary
summary <- datasummary(std_score + etpteacher + age + girl + percentile + bottomhalf ~ tracking * (Mean + SD),
data = df_summary, na.rm = TRUE)
View(df)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/cleaning.R", echo=TRUE)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/cleaning.R", echo=TRUE)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/cleaning.R", echo=TRUE)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/cleaning.R", echo=TRUE)
dplyr::last_dplyr_warnings()
unique(df_concatenated$percentile)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/cleaning.R", echo=TRUE)
df_cleaned <- df_concatenated %>%
mutate(across(c(gender, percentile, quartile), ~if_else(. %in% deficiency_pattern, NA, .)))
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/cleaning.R", echo=TRUE)
df_cleaned <- df_concatenated %>%
mutate(across(c(gender, percentile, quartile), ~if_else(. %in% deficiency_pattern, NA, .))) %>%
mutate(percentile = as.numeric(percentile))
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/cleaning.R", echo=TRUE)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/cleaning.R", echo=TRUE)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/summarization.R", echo=TRUE)
summrayy
summary
summary <- datasummary(std_score + etpteacher + age + girl + percentile + bottomhalf + bottomquarter + secondquarter + thirdquarter ~ tracking * (Mean + SD),
data = df_summary, na.rm = TRUE)
summary
summary <- datasummary(std_score + etpteacher + age + girl + percentile + bottomhalf + bottomquarter + secondquarter + thirdquarter ~ tracking * (Mean + SD),
data = df_summary, na.rm = TRUE)
summary
View(test)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/cleaning.R", echo=TRUE)
View(df)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/summarization.R", echo=TRUE)
library(pacman)
p_load(tidyverse, modelsummary)
dir_cleand_data <- "./data/cleaned"
df_summary <- readRDS(paste0(dir_cleand_data, "/df.rds")) %>%
mutate(is_treatment = if_else(tracking == 1, "treatment", "control"))
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/summarization.R", echo=TRUE)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/summarization.R", echo=TRUE)
summary <- datasummary(std_score + etpteacher + age + is_girl + percentile + bottomhalf + bottomquarter + secondquarter + thirdquarter + tracking ~ (N + Mean + SD),
data = df_summary, na.rm = TRUE)
summary
summary <- datasummary(std_score + score + etpteacher + age + is_girl + percentile + bottomhalf + bottomquarter + secondquarter + thirdquarter + tracking ~ (N + Mean + SD),
data = df_summary, na.rm = TRUE)
summary
plot(cars)
