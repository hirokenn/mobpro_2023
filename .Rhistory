stars = TRUE,
cluster = "county",
coef_map = coef_map,
gof_map = gof_map)
result_summary
result_summary <- modelsummary(results,
stars = TRUE,
cluster = "sch_id",
coef_map = coef_map,
gof_map = gof_map)
result_summary
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/estimation.R", echo=TRUE)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/estimation.R", echo=TRUE)
df <- readRDS(paste0(dir_cleand_data, "/df.rds"))
# define models ----------------------------------------------------------------
base_model <- "std_score ~ tracking"
with_covariates_model <- paste(base_model,
"age",
"is_girl",
"etp_teacher",
"bottom_half",
"bottom_quarter",
"second_quarter",
"third_quarter",
"percentile",
sep = " + ")
with_cross_term_model <- paste(with_covariates_model,
"tracking:bottom_half",
sep = " + ")
# regression analysis ----------------------------------------------------------
results <- list(
"共変量なし" = lm(formula = base_model, data = df),
"共変量あり" = lm(formula = with_covariates_model, data = df),
"交差項あり" = lm(formula = with_cross_term_model, data = df)
)
# regression table -------------------------------------------------------------
coef_map <- c("tracking" = "処置効果",
"tracking:bottom_half" = "事前の成績位置(下位50%) × 能力別学級")
gof_map <- tribble(
~raw, ~clean, ~fmt,
"nobs", "観測数", 0,
"r.squared", "決定数", 2
)
result_summary <- modelsummary(results,
stars = TRUE,
vcov = ~sch_id,
coef_map = coef_map,
gof_map = gof_map)
p_load(sandwich)
p_load(clubSandwich)
result_summary <- modelsummary(results,
stars = TRUE,
vcov = ~sch_id,
coef_map = coef_map,
gof_map = gof_map)
df <- readRDS(paste0(dir_cleand_data, "/df.rds")) %>%
na.omit(sch_id)
View(df)
df <- readRDS(paste0(dir_cleand_data, "/df.rds"))
summary(df)
# regression analysis ----------------------------------------------------------
results <- list(
"共変量なし" = lm(formula = base_model, data = df),
"共変量あり" = lm(formula = with_covariates_model, data = df)
# "交差項あり" = lm(formula = with_cross_term_model, data = df)
)
# regression table -------------------------------------------------------------
coef_map <- c("tracking" = "処置効果",
"tracking:bottom_half" = "事前の成績位置(下位50%) × 能力別学級")
gof_map <- tribble(
~raw, ~clean, ~fmt,
"nobs", "観測数", 0,
"r.squared", "決定数", 2
)
result_summary <- modelsummary(results,
stars = TRUE,
vcov = ~sch_id,
coef_map = coef_map,
gof_map = gof_map)
?insight::get_varcov
View(df)
colnames(df)
result_summary <- modelsummary(results,
stars = TRUE,
vcov = ~sch_id,
coef_map = coef_map,
gof_map = gof_map)
help(msummary)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/estimation.R", echo=TRUE)
df <- readRDS(paste0(dir_cleand_data, "/df.rds"))
# define models ----------------------------------------------------------------
base_model <- "std_score ~ tracking"
with_covariates_model <- paste(base_model,
"age",
"is_girl",
"etp_teacher",
"bottom_half",
"bottom_quarter",
"second_quarter",
"third_quarter",
"percentile",
sep = " + ")
with_cross_term_model <- paste(with_covariates_model,
"tracking:bottom_half",
sep = " + ")
# regression analysis ----------------------------------------------------------
results <- list(
"共変量なし" = lm(formula = base_model, data = df),
"共変量あり" = lm(formula = with_covariates_model, data = df)
"交差項あり" = lm(formula = with_cross_term_model, data = df)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/estimation.R", echo=TRUE)
result_summary <- modelsummary(results,
stars = TRUE,
vcov = ~sch_id,
coef_map = coef_map,
gof_map = gof_map)
result_summary <- modelsummary(results,
stars = TRUE,
vcov = "cluster",
coef_map = coef_map,
gof_map = gof_map)
result_summary <- modelsummary(results,
stars = TRUE,
vcov = ~sch_id,
coef_map = coef_map,
gof_map = gof_map)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/estimation.R", echo=TRUE)
result_summary <- modelsummary(results,
stars = TRUE,
vcov = ~ sch_id)
result_summary <- modelsummary(results,
stars = TRUE,
vcov = ~ sch_id,
coef_map = coef_map,
gof_map = gof_map)
p_load(modelsummary())
p_load(modelsummary
)
help("lm_robust")
# regression analysis ----------------------------------------------------------
results <- list(
"共変量なし" = lm_robust(formula = as.formula(base_model), data = df),
"共変量あり" = lm_robust(formula = as.formula(with_covariates_model), data = df),
"交差項あり" = lm_robust(formula = as.formula(with_cross_term_model), data = df)
)
# regression table -------------------------------------------------------------
coef_map <- c("tracking" = "処置効果",
"tracking:bottom_half" = "事前の成績位置(下位50%) × 能力別学級")
gof_map <- tribble(
~raw, ~clean, ~fmt,
"nobs", "観測数", 0,
"r.squared", "決定数", 2
)
result_summary <- modelsummary(results,
stars = TRUE,
vcov = ~ sch_id,
coef_map = coef_map,
gof_map = gof_map)
result_summary <- modelsummary(results,
stars = TRUE,
coef_map = coef_map,
gof_map = gof_map)
result_summary
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/estimation.R", echo=TRUE)
help("modelsummary")
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/estimation.R", echo=TRUE)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/estimation.R", echo=TRUE)
View(df_student_characteristics)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/cleaning.R", echo=TRUE)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/estimation.R", echo=TRUE)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/cleaning.R", echo=TRUE)
# set directory
dir_clean_data <- "./data/clean"
dir_output <- "./data/distributed"
# read data
df_short_clean <- read_csv(paste0(dir_clean_data, "/df_short2.csv"))
View(df_short_clean)
View(df_short_clean)
source("~/中室研/2023秋/課題/mobpro_2023/make_messy_data.R", echo=TRUE)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/cleaning.R", echo=TRUE)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/estimation.R", echo=TRUE)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/estimation.R", echo=TRUE)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/estimation.R", echo=TRUE)
sum(is.na(df_short_clean$pupilid))
sum(is.na(df_short_clean$schoolid))
summary(df_short_clean)
summary(df)
table(df$gender)
table(df$district)
sum(df$stu_id == df_short_clean$pupilid)
sum(df$sch_id == df_short_clean$schoolid)
sum(df$district == df_short_clean$district)
sum(df$agetest == df_short_clean$age)
sum(df$age == df_short_clean$agetest)
sum(df$age == df_short_clean$agetest, na.rm = T)
sum(df$bottom_half == df_short_clean$bottomhalf, na.rm = T)
sum(df$bottom_half == df_short_clean$bottomhalf, na.rm = T) + 419
sum(df_student_characteristics$bottom_half == df_short_clean$bottomhalf, na.rm = T) + 419
View(df_school_characteristics)
View(df_student_characteristics)
sum(df_short_clean$percentile == 1,na.rm = TRUE)
sum(df_short_clean$percentile == 999,na.rm = TRUE)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/cleaning.R", echo=TRUE)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/estimation.R", echo=TRUE)
View(df_short_clean)
df_s <- df_short_clean %>%
mutate(std_score = drop(scale(score)))
mutate(std_score = drop(scale(totalscore)))
df_s <- df_short_clean %>%
mutate(std_score = drop(scale(totalscore)))
colnames(df_s)
with_covariates_model <- paste(base_model,
"agetest",
"girl",
"etpteacher",
"bottomhalf",
"bottomquarter",
"secondquarter",
"thirdquarter",
"percentile",
sep = " + ")
res <- list(
"basemodel" = lm(formula = base_model,data = df_s),
"covariates" = lm(formla = with_covariates_model, data = df_s)
)
with_covariates_model <- paste(base_model,
"agetest",
"girl",
"etpteacher",
"bottomhalf",
"bottomquarter",
"secondquarter",
"thirdquarter",
"percentile",
sep = " + ")
res <- list(
"basemodel" = lm(formula = base_model,data = df_s),
"covariates" = lm(formla = with_covariates_model, data = df_s)
)
res <- list(
"basemodel" = lm(formula = base_model,data = df_s),
"covariates" = lm(formula = with_covariates_model, data = df_s)
)
msummary(res)
res <- list(
"basemodel" = lm(formula = base_model,data = df_s),
"covariates" = lm(formula = with_covariates_model, data = df_s),
"cross" = lm(formula = paste(with_covariates_model, "+ bottomhalf:tracking"))
)
res <- list(
"basemodel" = lm(formula = base_model,data = df_s),
"covariates" = lm(formula = with_covariates_model, data = df_s),
"cross" = lm(formula = paste(with_covariates_model, "+ bottomhalf:tracking"), data = df_s)
)
"covariates" = lm(formula = with_covariates_model, data = df_s)
res <- list(
"basemodel" = lm(formula = base_model,data = df_s),
"covariates" = lm(formula = with_covariates_model, data = df_s),
"cross" = lm(formula = paste(with_covariates_model, "+ bottomhalf:tracking"), data = df_s)
)
msummary(res)
View(df_short_clean)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/estimation.R", echo=TRUE)
result_summary <- modelsummary(results,
stars = TRUE,
add_rows = control_status,
coef_map = coef_map,
gof_map = gof_map,
output = paste0(dir_figure, "/result.png"))
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/summarization.R", echo=TRUE)
dir_source <- "./src/answer"
# aggregate data ---------------------------------------------------------------
df_aggregated <- df %>%
group_by(school) %>%
summarize(girls_ratio = mean(is_girl, na.rm = TRUE),
age_mean = mean(age, na.rm = TRUE),
district = district)
# aggregate data ---------------------------------------------------------------
df_aggregated <- df %>%
group_by(sch_id) %>%
summarize(girls_ratio = mean(is_girl, na.rm = TRUE),
age_mean = mean(age, na.rm = TRUE),
district = district)
df_aggregated
# aggregate data ---------------------------------------------------------------
df_aggregated <- df %>%
group_by(sch_id) %>%
reframe(girls_ratio = mean(is_girl, na.rm = TRUE),
age_mean = mean(age, na.rm = TRUE),
district = district)
df_aggregated
# aggregate data ---------------------------------------------------------------
df_aggregated <- df %>%
group_by(sch_id) %>%
reframe(girls_ratio = mean(is_girl, na.rm = TRUE),
age_mean = mean(age, na.rm = TRUE))
df_aggregated
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/cleaning.R", echo=TRUE)
df_school <- readRDS(paste0(dir_clean_data, "/df_school.rds"))
# aggregate data ---------------------------------------------------------------
df_aggregated <- df %>%
group_by(sch_id) %>%
reframe(girls_ratio = mean(is_girl, na.rm = TRUE),
age_mean = mean(age, na.rm = TRUE)) %>%
left_join(df_school, by = "sch_id")
# aggregate data ---------------------------------------------------------------
df_aggregated <- df %>%
group_by(sch_id) %>%
reframe(girls_ratio = mean(is_girl, na.rm = TRUE),
age_mean = mean(age, na.rm = TRUE)) %>%
left_join(df_school, by = sch_id)
# aggregate data ---------------------------------------------------------------
df_aggregated <- df %>%
group_by(sch_id) %>%
reframe(girls_ratio = mean(is_girl, na.rm = TRUE),
age_mean = mean(age, na.rm = TRUE)) %>%
left_join(df_school, by = "sch_id")
# t-test -----------------------------------------------------------------------
t_test <- colnames(df_aggregated) %>%
map_dfr(~{t.test(formula = as.formula(paste0(.," ~ tracking")),
data = df)})
df_aggregated
# aggregate data ---------------------------------------------------------------
df_aggregated <- df %>%
group_by(sch_id) %>%
reframe(girls_ratio = mean(is_girl, na.rm = TRUE),
age_mean = mean(age, na.rm = TRUE)) %>%
left_join(df_school, by = "sch_id") %>%
mutate(is_bungoma = if_else())
# t-test -----------------------------------------------------------------------
t_test <- colnames(df_aggregated) %>%
map_dfr(~{as.formula(paste0(.," ~ tracking"))})
# t-test -----------------------------------------------------------------------
t_test <- colnames(df_aggregated) %>%
map_dfr(~{paste0(.," ~ tracking")})
# t-test -----------------------------------------------------------------------
t_test <- colnames(df_aggregated) %>%
map(~{as.formula(paste0(.," ~ tracking")),
# t-test -----------------------------------------------------------------------
t_test <- colnames(df_aggregated) %>%
map(~{as.formula(paste0(.," ~ tracking")), data = df_aggregated)})
# t-test -----------------------------------------------------------------------
t_test <- colnames(df_aggregated) %>%
map(~{t.test(as.formula(paste0(.," ~ tracking")), data = df_aggregated)})
# t-test -----------------------------------------------------------------------
t_test <- c("girls_ratio", "age_mean", district) %>%
map(~{t.test(as.formula(paste0(.," ~ tracking")), data = df_aggregated)})
# aggregate data ---------------------------------------------------------------
df_aggregated <- df %>%
group_by(sch_id) %>%
reframe(girls_ratio = mean(is_girl, na.rm = TRUE),
age_mean = mean(age, na.rm = TRUE)) %>%
left_join(df_school, by = "sch_id") %>%
mutate(is_bungoma = if_else(district == "BUNGOMA", 1, 0))
# t-test -----------------------------------------------------------------------
t_test <- c("girls_ratio", "age_mean", district) %>%
map(~{t.test(as.formula(paste0(.," ~ tracking")), data = df_aggregated)})
# t-test -----------------------------------------------------------------------
t_test <- c("girls_ratio", "age_mean", "district") %>%
map(~{t.test(as.formula(paste0(.," ~ tracking")), data = df_aggregated)})
# t-test -----------------------------------------------------------------------
t_test <- c("girls_ratio", "age_mean", "is_bungoma") %>%
map(~{t.test(as.formula(paste0(.," ~ tracking")), data = df_aggregated)})
t_test
# t-test -----------------------------------------------------------------------
t_test <- c("girls_ratio", "age_mean", "is_bungoma") %>%
map_dfr(~{as.formula(paste0(.," ~ tracking")) %>%
t.test(data = df_aggregated)})
# t-test -----------------------------------------------------------------------
t_test <- c("girls_ratio", "age_mean", "is_bungoma") %>%
map(~{as.formula(paste0(.," ~ tracking")) %>%
t.test(data = df_aggregated)})
View(t_test)
summary(t_test[1])
summary(t_test[[1]])
summary(t_test[1][1])
test <- t.test(age_mean ~ tracking, data = df_aggregated)
test
summary(test)
View(test)
test$estimate
test$estimate[1]
test$estimate[2]
test$estimate["mean in group 0"]
test$p.value
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/balance_test.R", echo=TRUE)
View(t_test)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/balance_test.R", echo=TRUE)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/balance_test.R", echo=TRUE)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/balance_test.R", echo=TRUE)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/balance_test.R", echo=TRUE)
View(test)
View(t_test)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/balance_test.R", echo=TRUE)
t_test
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/balance_test.R", echo=TRUE)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/balance_test.R", echo=TRUE)
paste0("介入群\nN = ", 44)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/balance_test.R", echo=TRUE)
t_test
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/balance_test.R", echo=TRUE)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/balance_test.R", echo=TRUE)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/balance_test.R", echo=TRUE)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/balance_test.R", echo=TRUE)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/balance_test.R", echo=TRUE)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/balance_test.R", echo=TRUE)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/balance_test.R", echo=TRUE)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/balance_test.R", echo=TRUE)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/balance_test.R", echo=TRUE)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/balance_test.R", echo=TRUE)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/balance_test.R", echo=TRUE)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/balance_test.R", echo=TRUE)
# save file
gtsave(t_test, filename = paste0(dir_figure, "/t_test.png"))
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/balance_test.R", echo=TRUE)
# format result ----------------------------------------------------------------
t_test_table <- t_test %>%
knitr::kable()
t_test_table
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/balance_test.R", echo=TRUE)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/balance_test.R", echo=TRUE)
p_load(flextable)
df <- readRDS(paste0(dir_cleand_data, "/df.rds"))
df_school <- readRDS(paste0(dir_clean_data, "/df_school.rds"))
# aggregate data ---------------------------------------------------------------
df_aggregated <- df %>%
group_by(sch_id) %>%
reframe(girls_ratio = mean(is_girl, na.rm = TRUE),
age_mean = mean(age, na.rm = TRUE)) %>%
left_join(df_school, by = "sch_id") %>%
mutate(is_bungoma = if_else(district == "BUNGOMA", 1, 0))
# t-test -----------------------------------------------------------------------
my_t_test <- function(variable){
# conduct t-test
formula <- as.formula(paste0(variable, " ~ tracking"))
result <- t.test(formula = formula, data = df_aggregated)
# extract estimated values
mean_group1 <- result$estimate[1]
mean_group2 <- result$estimate[2]
difference <- mean_group1 - mean_group2
se <- result$stderr
p.value <- result$p.value
# make result tibble
result_table <- tribble(
~"変数名", ~"介入群",   ~"対照群",   ~"差(介入群 - 対照群)", ~"標準誤差", ~"P値",
variable,  mean_group1, mean_group2, difference,             se,          p.value
)
return(result_table)
}
t_test <- c("girls_ratio", "age_mean", "is_bungoma") %>%
map_dfr(my_t_test) %>%
mutate(変数名 = c("児童の女子比率",
"児童の平均年齢",
"学校の所在地(BUNGOMAにあれば1)"))
# format result ----------------------------------------------------------------
t_test_table <- t_test %>%
flextable() %>%
colformat_double(digits = 3)
t_test_table
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/balance_test.R", echo=TRUE)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/balance_test.R", echo=TRUE)
p_load(kableExtra)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/balance_test.R", echo=TRUE)
t_test_table
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/balance_test.R", echo=TRUE)
t?
gb
t_test_table
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/balance_test.R", echo=TRUE)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/balance_test.R", echo=TRUE)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/run_all.R", echo=TRUE)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/run_all.R", echo=TRUE)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/run_all.R", echo=TRUE)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/run_all.R", echo=TRUE)
# balance test
source(paste0(dir_source, "/balance_test.R"))
# balance test
source(paste0(dir_source, "/balance_test.R"))
# regression analysis
source(paste0(dir_source, "/estimation.R"))
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/run_all.R", echo=TRUE)
result_summary
# regression analysis ----------------------------------------------------------
results <- list(
"共変量なし" = lm_robust(formula = as.formula(base_model), data = df, clusters = stu_id),
"共変量あり" = lm_robust(formula = as.formula(with_covariates_model), data = df),
"交差項あり" = lm_robust(formula = as.formula(with_cross_term_model), data = df)
)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/estimation.R", echo=TRUE)
result_summary <- modelsummary(results,
stars = TRUE,
add_rows = control_status,
coef_map = coef_map,
gof_map = gof_map),
result_summary <- modelsummary(results,
stars = TRUE,
add_rows = control_status,
coef_map = coef_map,
gof_map = gof_map)
result_summary
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/estimation.R", echo=TRUE)
result_summary
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/estimation.R", echo=TRUE)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/run_all.R", echo=TRUE)
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/estimation.R")
result_summary <- modelsummary(results,
stars = TRUE,
add_rows = control_status,
coef_map = coef_map,
gof_map = gof_map)
result_summary
source("~/中室研/2023秋/課題/mobpro_2023/src/answer/balance_test.R", echo=TRUE)
